# TODO
# - setup codelclimate test report, or replace with the other coverage
#   system
# - setup cypress recording with the key from the env variable
# - to enable cypress coverage we need to run the command with that set to true
# - if we are spliting cypress job then we'll need to upload multiple reports to
#   to the coverage system
# - all of this coverage stuff, sould be added to the starter projects

name: Continuous Integration

on: push

jobs:
  build_test:
    name: Build and Run Jest Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Tests
        run: npm run test:coverage -- --runInBand
  cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: 'http://localhost:8080'
          record: true
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  s3-deploy:
    name: S3 Deploy
    needs:
      - build_test
      - cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Setup Ruby 2.4
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.4'
      - name: Install Dependencies
        run: |
          gem install s3_website -v 3.4.0
          npm ci
      - name: Build
        run: npm run build
      - name: Deploy
        run: ./s3_deploy.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
